# Generated by Django 2.1.7 on 2019-04-01 14:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_joined', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('isbn', models.CharField(blank=True, max_length=20, null=True)),
                ('year', models.IntegerField()),
                ('url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Citation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('slides', 'Slides'), ('syllabus', 'Syllabus'), ('tweet', 'Tweet'), ('wikipedia', 'Wikipedia'), ('blog', 'Blog'), ('grey_literature', 'Grey Literature'), ('sci_publication', 'Scientific Publication'), ('book', 'Book'), ('patent', 'Patent')], max_length=50)),
                ('cite_id', models.CharField(max_length=45)),
                ('cite_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('wikipage', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('iso_code', models.CharField(blank=True, max_length=3, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Dataset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('web_page', models.URLField(blank=True, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sci_impact.City')),
            ],
        ),
        migrations.CreateModel(
            name='Patent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('year', models.IntegerField()),
                ('url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sci_impact.Country')),
            ],
        ),
        migrations.CreateModel(
            name='ScientificPublication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('doi', models.CharField(blank=True, max_length=255, null=True)),
                ('year', models.IntegerField()),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Scientist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', max_length=100)),
                ('last_name', models.CharField(default='', max_length=100)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('orcid', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=50, null=True)),
                ('scientific_publications', models.IntegerField(default=0)),
                ('scientific_publications_as_first_author', models.IntegerField(default=0)),
                ('scientific_publications_with_citations', models.IntegerField(default=0)),
                ('books', models.IntegerField(default=0)),
                ('patents', models.IntegerField(default=0)),
                ('datasets', models.IntegerField(default=0)),
                ('tools', models.IntegerField(default=0)),
                ('book_citations', models.IntegerField(default=0)),
                ('dataset_citations', models.IntegerField(default=0)),
                ('patent_citations', models.IntegerField(default=0)),
                ('tools_citations', models.IntegerField(default=0)),
                ('total_citations', models.IntegerField(default=0)),
                ('h_index', models.IntegerField(default=0)),
                ('i10_index', models.IntegerField(default=0)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sci_impact.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Tool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('source_repo', models.URLField(blank=True, null=True)),
                ('authors', models.ManyToManyField(to='sci_impact.Scientist')),
                ('citations', models.ManyToManyField(blank=True, to='sci_impact.Citation')),
            ],
        ),
        migrations.AddField(
            model_name='scientificpublication',
            name='authors',
            field=models.ManyToManyField(to='sci_impact.Scientist'),
        ),
        migrations.AddField(
            model_name='scientificpublication',
            name='citations',
            field=models.ManyToManyField(blank=True, to='sci_impact.Citation'),
        ),
        migrations.AddField(
            model_name='patent',
            name='authors',
            field=models.ManyToManyField(to='sci_impact.Scientist'),
        ),
        migrations.AddField(
            model_name='patent',
            name='citations',
            field=models.ManyToManyField(blank=True, to='sci_impact.Citation'),
        ),
        migrations.AddField(
            model_name='institution',
            name='scientists',
            field=models.ManyToManyField(through='sci_impact.Affiliation', to='sci_impact.Scientist'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='authors',
            field=models.ManyToManyField(to='sci_impact.Scientist'),
        ),
        migrations.AddField(
            model_name='dataset',
            name='citations',
            field=models.ManyToManyField(blank=True, to='sci_impact.Citation'),
        ),
        migrations.AddField(
            model_name='city',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sci_impact.Country'),
        ),
        migrations.AddField(
            model_name='city',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sci_impact.Region'),
        ),
        migrations.AddField(
            model_name='book',
            name='authors',
            field=models.ManyToManyField(to='sci_impact.Scientist'),
        ),
        migrations.AddField(
            model_name='book',
            name='citations',
            field=models.ManyToManyField(blank=True, to='sci_impact.Citation'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sci_impact.Institution'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='scientist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sci_impact.Scientist'),
        ),
    ]
